// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from usnit.djinni

#import "USNUsnitEventGen+Private.h"
#import "USNUsnitEventGen.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface USNUsnitEventGenCppProxy : NSObject<USNUsnitEventGen>

- (id)initWithCpp:(const std::shared_ptr<::usnit::UsnitEventGen>&)cppRef;

@end

@implementation USNUsnitEventGenCppProxy {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::usnit::UsnitEventGen>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::usnit::UsnitEventGen>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (BOOL)callback:(USNUsnitEventType)id
            data:(nonnull NSString *)data {
    try {
        auto r = _cppRefHandle.get()->callback(::djinni::Enum<::usnit::UsnitEventType, USNUsnitEventType>::toCpp(id),
                                               ::djinni::String::toCpp(data));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

class UsnitEventGen::ObjcProxy final
: public ::usnit::UsnitEventGen
, public ::djinni::ObjcProxyCache::Handle<ObjcType>
{
public:
    using Handle::Handle;
    bool callback(::usnit::UsnitEventType c_id, const std::string & c_data) override
    {
        @autoreleasepool {
            auto r = [Handle::get() callback:(::djinni::Enum<::usnit::UsnitEventType, USNUsnitEventType>::fromCpp(c_id))
                                        data:(::djinni::String::fromCpp(c_data))];
            return ::djinni::Bool::toCpp(r);
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto UsnitEventGen::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    if ([(id)objc isKindOfClass:[USNUsnitEventGenCppProxy class]]) {
        return ((USNUsnitEventGenCppProxy*)objc)->_cppRefHandle.get();
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto UsnitEventGen::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    if (auto cppPtr = dynamic_cast<ObjcProxy*>(cpp.get())) {
        return cppPtr->Handle::get();
    }
    return ::djinni::get_cpp_proxy<USNUsnitEventGenCppProxy>(cpp);
}

}  // namespace djinni_generated

@end
